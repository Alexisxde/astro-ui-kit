---
import { cn } from "@/lib/utils"
import { cva, type VariantProps } from "class-variance-authority"

const badge = cva(
	"transition-all duration-300 ease-in-out pointer-events-none flex items-center justify-center gap-x-1 font-medium capitalize",
	{
		variants: {
			variant: {
				neutral:
					"bg-neutral-50 text-neutral-600 ring-1 ring-neutral-600/10 ring-inset dark:bg-neutral-400/10 dark:text-neutral-400 dark:ring-neutral-400/30",
				red: "bg-red-50 text-red-600 ring-1 ring-red-600/10 ring-inset dark:bg-red-400/10 dark:text-red-400 dark:ring-red-400/30",
				blue: "bg-blue-50 text-blue-600 ring-1 ring-blue-600/10 ring-inset dark:bg-blue-400/10 dark:text-blue-400 dark:ring-blue-400/30",
				green:
					"bg-green-50 text-green-600 ring-1 ring-green-600/10 ring-inset dark:bg-green-400/10 dark:text-green-400 dark:ring-green-400/30",
				yellow:
					"bg-yellow-50 text-yellow-600 ring-1 ring-yellow-600/10 ring-inset dark:bg-yellow-400/10 dark:text-yellow-400 dark:ring-yellow-400/30",
				pink: "bg-pink-50 text-pink-600 ring-1 ring-pink-600/10 ring-inset dark:bg-pink-400/10 dark:text-pink-400 dark:ring-pink-400/30",
				orange:
					"bg-orange-50 text-orange-600 ring-1 ring-orange-600/10 ring-inset dark:bg-orange-400/10 dark:text-orange-400 dark:ring-orange-400/30",
				cyan: "bg-cyan-50 text-cyan-600 ring-1 ring-cyan-600/10 ring-inset dark:bg-cyan-400/10 dark:text-cyan-400 dark:ring-cyan-400/30",
				fuchsia:
					"bg-fuchsia-50 text-fuchsia-600 ring-1 ring-fuchsia-600/10 ring-inset dark:bg-fuchsia-400/10 dark:text-fuchsia-400 dark:ring-fuchsia-400/30",
				purple:
					"bg-purple-50 text-purple-600 ring-1 ring-purple-600/10 ring-inset dark:bg-purple-400/10 dark:text-purple-400 dark:ring-purple-400/30",
				sky: "bg-sky-50 text-sky-600 ring-1 ring-sky-600/10 ring-inset dark:bg-sky-400/10 dark:text-sky-400 dark:ring-sky-400/30"
			},
			size: {
				xs: "px-2 py-1 text-xs rounded-md",
				sm: "px-3 py-1.5 text-xs rounded-md",
				md: "px-4 py-2 text-sm rounded-lg"
			}
		},
		defaultVariants: { variant: "neutral", size: "xs" }
	}
)

interface Props
	extends astroHTML.JSX.HTMLAttributes,
		VariantProps<typeof badge> {}

const { variant, size, class: className } = Astro.props
---

<span class={cn(badge({ variant, size }), className)}>
	<slot />
</span>
